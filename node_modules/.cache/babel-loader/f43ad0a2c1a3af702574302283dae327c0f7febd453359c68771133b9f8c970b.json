{"ast":null,"code":"export default {\n  name: 'ImageEditor',\n  props: {\n    image: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      drawing: false,\n      context: null\n    };\n  },\n  mounted() {\n    this.context = this.$refs.canvas.getContext('2d');\n    this.loadImage();\n  },\n  methods: {\n    loadImage() {\n      const img = this.image.data;\n      img.onload = () => {\n        this.context.drawImage(img, 0, 0, this.$refs.canvas.width, this.$refs.canvas.height);\n      };\n    },\n    startDrawing(event) {\n      this.drawing = true;\n      this.context.beginPath();\n      this.context.moveTo(event.clientX - this.$refs.canvas.getBoundingClientRect().left, event.clientY - this.$refs.canvas.getBoundingClientRect().top);\n    },\n    draw(event) {\n      if (!this.drawing) return;\n      this.context.lineTo(event.clientX - this.$refs.canvas.getBoundingClientRect().left, event.clientY - this.$refs.canvas.getBoundingClientRect().top);\n      this.context.stroke();\n    },\n    stopDrawing() {\n      this.drawing = false;\n    }\n  }\n};","map":{"version":3,"names":["name","props","image","type","Object","required","data","drawing","context","mounted","$refs","canvas","getContext","loadImage","methods","img","onload","drawImage","width","height","startDrawing","event","beginPath","moveTo","clientX","getBoundingClientRect","left","clientY","top","draw","lineTo","stroke","stopDrawing"],"sources":["src/components/ImageEditor.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas ref=\"canvas\" @mousedown=\"startDrawing\" @mousemove=\"draw\" @mouseup=\"stopDrawing\"></canvas>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ImageEditor',\n  props: {\n    image: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      drawing: false,\n      context: null,\n    };\n  },\n  mounted() {\n    this.context = this.$refs.canvas.getContext('2d');\n    this.loadImage();\n  },\n  methods: {\n    loadImage() {\n      const img = this.image.data;\n      img.onload = () => {\n        this.context.drawImage(img, 0, 0, this.$refs.canvas.width, this.$refs.canvas.height);\n      };\n    },\n    startDrawing(event) {\n      this.drawing = true;\n      this.context.beginPath();\n      this.context.moveTo(event.clientX - this.$refs.canvas.getBoundingClientRect().left, event.clientY - this.$refs.canvas.getBoundingClientRect().top);\n    },\n    draw(event) {\n      if (!this.drawing) return;\n\n      this.context.lineTo(event.clientX - this.$refs.canvas.getBoundingClientRect().left, event.clientY - this.$refs.canvas.getBoundingClientRect().top);\n      this.context.stroke();\n    },\n    stopDrawing() {\n      this.drawing = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\ncanvas {\n  border: 1px solid #000;\n}\n</style>"],"mappings":"AAOA;EACAA,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAD,OAAA,QAAAE,KAAA,CAAAC,MAAA,CAAAC,UAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA,MAAAE,GAAA,QAAAb,KAAA,CAAAI,IAAA;MACAS,GAAA,CAAAC,MAAA;QACA,KAAAR,OAAA,CAAAS,SAAA,CAAAF,GAAA,aAAAL,KAAA,CAAAC,MAAA,CAAAO,KAAA,OAAAR,KAAA,CAAAC,MAAA,CAAAQ,MAAA;MACA;IACA;IACAC,aAAAC,KAAA;MACA,KAAAd,OAAA;MACA,KAAAC,OAAA,CAAAc,SAAA;MACA,KAAAd,OAAA,CAAAe,MAAA,CAAAF,KAAA,CAAAG,OAAA,QAAAd,KAAA,CAAAC,MAAA,CAAAc,qBAAA,GAAAC,IAAA,EAAAL,KAAA,CAAAM,OAAA,QAAAjB,KAAA,CAAAC,MAAA,CAAAc,qBAAA,GAAAG,GAAA;IACA;IACAC,KAAAR,KAAA;MACA,UAAAd,OAAA;MAEA,KAAAC,OAAA,CAAAsB,MAAA,CAAAT,KAAA,CAAAG,OAAA,QAAAd,KAAA,CAAAC,MAAA,CAAAc,qBAAA,GAAAC,IAAA,EAAAL,KAAA,CAAAM,OAAA,QAAAjB,KAAA,CAAAC,MAAA,CAAAc,qBAAA,GAAAG,GAAA;MACA,KAAApB,OAAA,CAAAuB,MAAA;IACA;IACAC,YAAA;MACA,KAAAzB,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}