{"ast":null,"code":"export default {\n  props: {\n    image: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      drawing: false,\n      context: null\n    };\n  },\n  mounted() {\n    this.context = this.$refs.canvas.getContext('2d');\n    this.drawImage();\n  },\n  methods: {\n    drawImage() {\n      const img = new Image();\n      img.src = this.image.src;\n      img.onload = () => {\n        this.context.drawImage(img, 0, 0, this.$refs.canvas.width, this.$refs.canvas.height);\n      };\n    },\n    startDrawing(event) {\n      this.drawing = true;\n      this.context.beginPath();\n      this.context.moveTo(event.clientX - this.$refs.canvas.getBoundingClientRect().left, event.clientY - this.$refs.canvas.getBoundingClientRect().top);\n    },\n    draw(event) {\n      if (!this.drawing) return;\n      this.context.lineTo(event.clientX - this.$refs.canvas.getBoundingClientRect().left, event.clientY - this.$refs.canvas.getBoundingClientRect().top);\n      this.context.stroke();\n    },\n    stopDrawing() {\n      this.drawing = false;\n    }\n  }\n};","map":{"version":3,"names":["props","image","type","Object","required","data","drawing","context","mounted","$refs","canvas","getContext","drawImage","methods","img","Image","src","onload","width","height","startDrawing","event","beginPath","moveTo","clientX","getBoundingClientRect","left","clientY","top","draw","lineTo","stroke","stopDrawing"],"sources":["src/components/ImageEditor.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas ref=\"canvas\" @mousedown=\"startDrawing\" @mousemove=\"draw\" @mouseup=\"stopDrawing\"></canvas>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    image: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      drawing: false,\n      context: null,\n    };\n  },\n  mounted() {\n    this.context = this.$refs.canvas.getContext('2d');\n    this.drawImage();\n  },\n  methods: {\n    drawImage() {\n      const img = new Image();\n      img.src = this.image.src;\n\n      img.onload = () => {\n        this.context.drawImage(img, 0, 0, this.$refs.canvas.width, this.$refs.canvas.height);\n      };\n    },\n    startDrawing(event) {\n      this.drawing = true;\n      this.context.beginPath();\n      this.context.moveTo(event.clientX - this.$refs.canvas.getBoundingClientRect().left, event.clientY - this.$refs.canvas.getBoundingClientRect().top);\n    },\n    draw(event) {\n      if (!this.drawing) return;\n\n      this.context.lineTo(event.clientX - this.$refs.canvas.getBoundingClientRect().left, event.clientY - this.$refs.canvas.getBoundingClientRect().top);\n      this.context.stroke();\n    },\n    stopDrawing() {\n      this.drawing = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\ncanvas {\n  border: 1px solid #000;\n}\n</style>"],"mappings":"AAOA;EACAA,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAD,OAAA,QAAAE,KAAA,CAAAC,MAAA,CAAAC,UAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA,MAAAE,GAAA,OAAAC,KAAA;MACAD,GAAA,CAAAE,GAAA,QAAAf,KAAA,CAAAe,GAAA;MAEAF,GAAA,CAAAG,MAAA;QACA,KAAAV,OAAA,CAAAK,SAAA,CAAAE,GAAA,aAAAL,KAAA,CAAAC,MAAA,CAAAQ,KAAA,OAAAT,KAAA,CAAAC,MAAA,CAAAS,MAAA;MACA;IACA;IACAC,aAAAC,KAAA;MACA,KAAAf,OAAA;MACA,KAAAC,OAAA,CAAAe,SAAA;MACA,KAAAf,OAAA,CAAAgB,MAAA,CAAAF,KAAA,CAAAG,OAAA,QAAAf,KAAA,CAAAC,MAAA,CAAAe,qBAAA,GAAAC,IAAA,EAAAL,KAAA,CAAAM,OAAA,QAAAlB,KAAA,CAAAC,MAAA,CAAAe,qBAAA,GAAAG,GAAA;IACA;IACAC,KAAAR,KAAA;MACA,UAAAf,OAAA;MAEA,KAAAC,OAAA,CAAAuB,MAAA,CAAAT,KAAA,CAAAG,OAAA,QAAAf,KAAA,CAAAC,MAAA,CAAAe,qBAAA,GAAAC,IAAA,EAAAL,KAAA,CAAAM,OAAA,QAAAlB,KAAA,CAAAC,MAAA,CAAAe,qBAAA,GAAAG,GAAA;MACA,KAAArB,OAAA,CAAAwB,MAAA;IACA;IACAC,YAAA;MACA,KAAA1B,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}