{"ast":null,"code":"export default {\n  name: 'ImageEditor',\n  components: {},\n  data() {\n    return {\n      canvas: null,\n      ctx: null,\n      isDrawing: false,\n      brush_colour: '#000',\n      direction: true,\n      colour_palette: ['#FF0000', '#FF7F00', '#FFFF00', '#00FF00', '#0000FF']\n    };\n  },\n  mounted() {\n    this.canvas = this.$refs.canvas;\n    this.ctx = this.canvas.getContext('2d');\n    const image = new Image();\n    image.src = '/demo_image.png';\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n    this.ctx.lineJoin = 'round';\n    this.ctx.lineCap = 'round';\n    this.ctx.lineWidth = 20;\n    image.onload = () => {\n      this.ctx.drawImage(image, 0, 0, this.canvas.width, this.canvas.height);\n    };\n  },\n  methods: {\n    startDrawing(e) {\n      this.isDrawing = true;\n      this.ctx.beginPath();\n      this.ctx.moveTo(e.offsetX, e.offsetY);\n    },\n    draw(e) {\n      if (!this.isDrawing) return;\n      this.ctx.strokeStyle = `hsl(${this.hue}, 100%, 50%)`;\n      this.ctx.beginPath();\n      // account for canvas size (70% of parent)\n      const x = e.offsetX / 0.7;\n      const y = e.offsetY / 0.7;\n      this.ctx.moveTo(x, y);\n      this.ctx.lineTo(x, y);\n      this.ctx.stroke();\n    },\n    stopDrawing() {\n      this.isDrawing = false;\n    },\n    saveImage() {\n      const data = this.canvas.toDataURL('image/png');\n      const a = document.createElement('a');\n      a.href = data;\n      a.download = 'image.png';\n      a.click();\n    }\n  }\n};","map":{"version":3,"names":["name","components","data","canvas","ctx","isDrawing","brush_colour","direction","colour_palette","mounted","$refs","getContext","image","Image","src","width","window","innerWidth","height","innerHeight","lineJoin","lineCap","lineWidth","onload","drawImage","methods","startDrawing","e","beginPath","moveTo","offsetX","offsetY","draw","strokeStyle","hue","x","y","lineTo","stroke","stopDrawing","saveImage","toDataURL","a","document","createElement","href","download","click"],"sources":["src/components/ImageEditor.vue"],"sourcesContent":["<template>\n  <div id=\"image-editor\">\n    <h1>Image Editor</h1>\n    <canvas ref=\"canvas\" @mousedown=\"startDrawing\" @mouseup=\"stopDrawing\" @mousemove=\"draw\" @mouseleave=\"stopDrawing\"></canvas>\n    <div class=\"controls\">\n      <div class=\"palette\">\n        <div v-for=\"colour in colour_palette\" :key=\"colour\" :style=\"{ backgroundColor: colour }\" @click=\"brush_colour = colour\"></div>\n      </div>\n      <div class=\"export-btn\">\n        <button @click=\"saveImage\">Save</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ImageEditor',\n  components: {},\n  data() {\n    return {\n      canvas: null,\n      ctx: null,\n      isDrawing: false,\n      brush_colour: '#000',\n      direction: true,\n      \n      colour_palette: [\n          '#FF0000',\n          '#FF7F00',\n          '#FFFF00',\n          '#00FF00',\n          '#0000FF',\n      ]\n    }\n    \n  },\n  mounted() {\n    this.canvas = this.$refs.canvas\n    this.ctx = this.canvas.getContext('2d')\n    const image = new Image()\n    image.src = '/demo_image.png'\n    this.canvas.width = window.innerWidth\n    this.canvas.height = window.innerHeight\n    this.ctx.lineJoin = 'round'\n    this.ctx.lineCap = 'round'\n    this.ctx.lineWidth = 20\n    image.onload = () => {\n      this.ctx.drawImage(image, 0, 0, this.canvas.width, this.canvas.height)\n    }\n  },\n  methods: {\n    startDrawing(e) {\n      this.isDrawing = true\n      this.ctx.beginPath()\n      this.ctx.moveTo(e.offsetX, e.offsetY)\n    },\n    draw(e) {\n      if (!this.isDrawing) return\n      this.ctx.strokeStyle = `hsl(${this.hue}, 100%, 50%)`\n      this.ctx.beginPath()\n      // account for canvas size (70% of parent)\n      const x = e.offsetX / 0.7\n      const y = e.offsetY / 0.7\n      this.ctx.moveTo(x, y)\n      this.ctx.lineTo(x, y)\n      this.ctx.stroke()\n    },\n    stopDrawing() {\n      this.isDrawing = false\n    },\n    saveImage() {\n      const data = this.canvas.toDataURL('image/png')\n      const a = document.createElement('a')\n      a.href = data\n      a.download = 'image.png'\n      a.click()\n    },\n  },\n}\n</script>\n\n<style scoped>\n#image-editor {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\ncanvas {\n  background: #fff;\n  display: block;\n  margin: 0 auto;\n  border: solid 1px #000;\n  width: 70%;\n  height: 70%;\n}\n\n.controls {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.palette {\n  display: flex;\n  justify-content: space-between;\n  width: 200px;\n  height: 50px;\n  border: solid 1px #000;\n}\n</style>"],"mappings":"AAgBA;EACAA,IAAA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,GAAA;MACAC,SAAA;MACAC,YAAA;MACAC,SAAA;MAEAC,cAAA,GACA,WACA,WACA,WACA,WACA;IAEA;EAEA;EACAC,QAAA;IACA,KAAAN,MAAA,QAAAO,KAAA,CAAAP,MAAA;IACA,KAAAC,GAAA,QAAAD,MAAA,CAAAQ,UAAA;IACA,MAAAC,KAAA,OAAAC,KAAA;IACAD,KAAA,CAAAE,GAAA;IACA,KAAAX,MAAA,CAAAY,KAAA,GAAAC,MAAA,CAAAC,UAAA;IACA,KAAAd,MAAA,CAAAe,MAAA,GAAAF,MAAA,CAAAG,WAAA;IACA,KAAAf,GAAA,CAAAgB,QAAA;IACA,KAAAhB,GAAA,CAAAiB,OAAA;IACA,KAAAjB,GAAA,CAAAkB,SAAA;IACAV,KAAA,CAAAW,MAAA;MACA,KAAAnB,GAAA,CAAAoB,SAAA,CAAAZ,KAAA,aAAAT,MAAA,CAAAY,KAAA,OAAAZ,MAAA,CAAAe,MAAA;IACA;EACA;EACAO,OAAA;IACAC,aAAAC,CAAA;MACA,KAAAtB,SAAA;MACA,KAAAD,GAAA,CAAAwB,SAAA;MACA,KAAAxB,GAAA,CAAAyB,MAAA,CAAAF,CAAA,CAAAG,OAAA,EAAAH,CAAA,CAAAI,OAAA;IACA;IACAC,KAAAL,CAAA;MACA,UAAAtB,SAAA;MACA,KAAAD,GAAA,CAAA6B,WAAA,eAAAC,GAAA;MACA,KAAA9B,GAAA,CAAAwB,SAAA;MACA;MACA,MAAAO,CAAA,GAAAR,CAAA,CAAAG,OAAA;MACA,MAAAM,CAAA,GAAAT,CAAA,CAAAI,OAAA;MACA,KAAA3B,GAAA,CAAAyB,MAAA,CAAAM,CAAA,EAAAC,CAAA;MACA,KAAAhC,GAAA,CAAAiC,MAAA,CAAAF,CAAA,EAAAC,CAAA;MACA,KAAAhC,GAAA,CAAAkC,MAAA;IACA;IACAC,YAAA;MACA,KAAAlC,SAAA;IACA;IACAmC,UAAA;MACA,MAAAtC,IAAA,QAAAC,MAAA,CAAAsC,SAAA;MACA,MAAAC,CAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,CAAA,CAAAG,IAAA,GAAA3C,IAAA;MACAwC,CAAA,CAAAI,QAAA;MACAJ,CAAA,CAAAK,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}